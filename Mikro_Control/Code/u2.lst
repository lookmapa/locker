;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/11/2014 1:56:58
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2920      	GOTO       288
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1898      	BTFSC      TXSTA, 1
0x0006	0x2809      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0007	0x0000      	NOP
0x0008	0x2803      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x0824      	MOVF       FARG_UART1_Write_data_, 0
0x000B	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x000C	0x0008      	RETURN
; end of _UART1_Write
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x1303      	BCF        STATUS, 6
0x000F	0x0823      	MOVF       ___DoICPAddr+1, 0
0x0010	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0011	0x0822      	MOVF       ___DoICPAddr, 0
0x0012	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0013	0x0008      	RETURN
; end of _____DoICP
_check_key:
;u2.c,30 :: 		void check_key(){
;u2.c,31 :: 		for(i = 1; i < 13; i++){
0x0014	0x3001      	MOVLW      1
0x0015	0x1283      	BCF        STATUS, 5
0x0016	0x1303      	BCF        STATUS, 6
0x0017	0x00A0      	MOVWF      _i
0x0018	0x3000      	MOVLW      0
0x0019	0x00A1      	MOVWF      _i+1
L_check_key7:
0x001A	0x3080      	MOVLW      128
0x001B	0x0621      	XORWF      _i+1, 0
0x001C	0x00F0      	MOVWF      R0
0x001D	0x3080      	MOVLW      128
0x001E	0x0270      	SUBWF      R0, 0
0x001F	0x1D03      	BTFSS      STATUS, 2
0x0020	0x2823      	GOTO       L__check_key62
0x0021	0x300D      	MOVLW      13
0x0022	0x0220      	SUBWF      _i, 0
L__check_key62:
0x0023	0x1803      	BTFSC      STATUS, 0
0x0024	0x2903      	GOTO       L_check_key8
;u2.c,32 :: 		while(PORTD.F6 == 0){}
L_check_key10:
0x0025	0x1B08      	BTFSC      PORTD, 6
0x0026	0x2828      	GOTO       L_check_key11
0x0027	0x2825      	GOTO       L_check_key10
L_check_key11:
;u2.c,33 :: 		if(i == 1){
0x0028	0x3000      	MOVLW      0
0x0029	0x0621      	XORWF      _i+1, 0
0x002A	0x1D03      	BTFSS      STATUS, 2
0x002B	0x282E      	GOTO       L__check_key63
0x002C	0x3001      	MOVLW      1
0x002D	0x0620      	XORWF      _i, 0
L__check_key63:
0x002E	0x1D03      	BTFSS      STATUS, 2
0x002F	0x283A      	GOTO       L_check_key12
;u2.c,34 :: 		if(PORTC.F0 == 1){
0x0030	0x1C07      	BTFSS      PORTC, 0
0x0031	0x2836      	GOTO       L_check_key13
;u2.c,35 :: 		UART1_Write('1') ;
0x0032	0x3031      	MOVLW      49
0x0033	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0034	0x2003      	CALL       _UART1_Write
;u2.c,36 :: 		}else{
0x0035	0x2839      	GOTO       L_check_key14
L_check_key13:
;u2.c,37 :: 		UART1_Write('0') ;
0x0036	0x3030      	MOVLW      48
0x0037	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0038	0x2003      	CALL       _UART1_Write
;u2.c,38 :: 		}
L_check_key14:
;u2.c,39 :: 		}else if (i == 2){
0x0039	0x28FF      	GOTO       L_check_key15
L_check_key12:
0x003A	0x3000      	MOVLW      0
0x003B	0x0621      	XORWF      _i+1, 0
0x003C	0x1D03      	BTFSS      STATUS, 2
0x003D	0x2840      	GOTO       L__check_key64
0x003E	0x3002      	MOVLW      2
0x003F	0x0620      	XORWF      _i, 0
L__check_key64:
0x0040	0x1D03      	BTFSS      STATUS, 2
0x0041	0x284C      	GOTO       L_check_key16
;u2.c,40 :: 		if(PORTC.F1 == 1){
0x0042	0x1C87      	BTFSS      PORTC, 1
0x0043	0x2848      	GOTO       L_check_key17
;u2.c,41 :: 		UART1_Write('1') ;
0x0044	0x3031      	MOVLW      49
0x0045	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0046	0x2003      	CALL       _UART1_Write
;u2.c,42 :: 		}else{
0x0047	0x284B      	GOTO       L_check_key18
L_check_key17:
;u2.c,43 :: 		UART1_Write('0') ;
0x0048	0x3030      	MOVLW      48
0x0049	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x004A	0x2003      	CALL       _UART1_Write
;u2.c,44 :: 		}
L_check_key18:
;u2.c,45 :: 		}else if (i == 3){
0x004B	0x28FF      	GOTO       L_check_key19
L_check_key16:
0x004C	0x3000      	MOVLW      0
0x004D	0x0621      	XORWF      _i+1, 0
0x004E	0x1D03      	BTFSS      STATUS, 2
0x004F	0x2852      	GOTO       L__check_key65
0x0050	0x3003      	MOVLW      3
0x0051	0x0620      	XORWF      _i, 0
L__check_key65:
0x0052	0x1D03      	BTFSS      STATUS, 2
0x0053	0x285E      	GOTO       L_check_key20
;u2.c,46 :: 		if(PORTC.F2 == 1){
0x0054	0x1D07      	BTFSS      PORTC, 2
0x0055	0x285A      	GOTO       L_check_key21
;u2.c,47 :: 		UART1_Write('1') ;
0x0056	0x3031      	MOVLW      49
0x0057	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0058	0x2003      	CALL       _UART1_Write
;u2.c,48 :: 		}else{
0x0059	0x285D      	GOTO       L_check_key22
L_check_key21:
;u2.c,49 :: 		UART1_Write('0') ;
0x005A	0x3030      	MOVLW      48
0x005B	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x005C	0x2003      	CALL       _UART1_Write
;u2.c,50 :: 		}
L_check_key22:
;u2.c,51 :: 		}else if (i == 4){
0x005D	0x28FF      	GOTO       L_check_key23
L_check_key20:
0x005E	0x3000      	MOVLW      0
0x005F	0x0621      	XORWF      _i+1, 0
0x0060	0x1D03      	BTFSS      STATUS, 2
0x0061	0x2864      	GOTO       L__check_key66
0x0062	0x3004      	MOVLW      4
0x0063	0x0620      	XORWF      _i, 0
L__check_key66:
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x2870      	GOTO       L_check_key24
;u2.c,52 :: 		if(PORTC.F3 == 1){
0x0066	0x1D87      	BTFSS      PORTC, 3
0x0067	0x286C      	GOTO       L_check_key25
;u2.c,53 :: 		UART1_Write('1') ;
0x0068	0x3031      	MOVLW      49
0x0069	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x006A	0x2003      	CALL       _UART1_Write
;u2.c,54 :: 		}else{
0x006B	0x286F      	GOTO       L_check_key26
L_check_key25:
;u2.c,55 :: 		UART1_Write('0') ;
0x006C	0x3030      	MOVLW      48
0x006D	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x006E	0x2003      	CALL       _UART1_Write
;u2.c,56 :: 		}
L_check_key26:
;u2.c,57 :: 		}else if (i == 5){
0x006F	0x28FF      	GOTO       L_check_key27
L_check_key24:
0x0070	0x3000      	MOVLW      0
0x0071	0x0621      	XORWF      _i+1, 0
0x0072	0x1D03      	BTFSS      STATUS, 2
0x0073	0x2876      	GOTO       L__check_key67
0x0074	0x3005      	MOVLW      5
0x0075	0x0620      	XORWF      _i, 0
L__check_key67:
0x0076	0x1D03      	BTFSS      STATUS, 2
0x0077	0x2882      	GOTO       L_check_key28
;u2.c,58 :: 		if(PORTD.F0 == 1){
0x0078	0x1C08      	BTFSS      PORTD, 0
0x0079	0x287E      	GOTO       L_check_key29
;u2.c,59 :: 		UART1_Write('1') ;
0x007A	0x3031      	MOVLW      49
0x007B	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x007C	0x2003      	CALL       _UART1_Write
;u2.c,60 :: 		}else{
0x007D	0x2881      	GOTO       L_check_key30
L_check_key29:
;u2.c,61 :: 		UART1_Write('0') ;
0x007E	0x3030      	MOVLW      48
0x007F	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0080	0x2003      	CALL       _UART1_Write
;u2.c,62 :: 		}
L_check_key30:
;u2.c,63 :: 		}else if (i == 6){
0x0081	0x28FF      	GOTO       L_check_key31
L_check_key28:
0x0082	0x3000      	MOVLW      0
0x0083	0x0621      	XORWF      _i+1, 0
0x0084	0x1D03      	BTFSS      STATUS, 2
0x0085	0x2888      	GOTO       L__check_key68
0x0086	0x3006      	MOVLW      6
0x0087	0x0620      	XORWF      _i, 0
L__check_key68:
0x0088	0x1D03      	BTFSS      STATUS, 2
0x0089	0x2894      	GOTO       L_check_key32
;u2.c,64 :: 		if(PORTD.F1 == 1){
0x008A	0x1C88      	BTFSS      PORTD, 1
0x008B	0x2890      	GOTO       L_check_key33
;u2.c,65 :: 		UART1_Write('1') ;
0x008C	0x3031      	MOVLW      49
0x008D	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x008E	0x2003      	CALL       _UART1_Write
;u2.c,66 :: 		}else{
0x008F	0x2893      	GOTO       L_check_key34
L_check_key33:
;u2.c,67 :: 		UART1_Write('0') ;
0x0090	0x3030      	MOVLW      48
0x0091	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x0092	0x2003      	CALL       _UART1_Write
;u2.c,68 :: 		}
L_check_key34:
;u2.c,69 :: 		}else if (i == 7){
0x0093	0x28FF      	GOTO       L_check_key35
L_check_key32:
0x0094	0x3000      	MOVLW      0
0x0095	0x0621      	XORWF      _i+1, 0
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x289A      	GOTO       L__check_key69
0x0098	0x3007      	MOVLW      7
0x0099	0x0620      	XORWF      _i, 0
L__check_key69:
0x009A	0x1D03      	BTFSS      STATUS, 2
0x009B	0x28A6      	GOTO       L_check_key36
;u2.c,70 :: 		if(PORTD.F2 == 1){
0x009C	0x1D08      	BTFSS      PORTD, 2
0x009D	0x28A2      	GOTO       L_check_key37
;u2.c,71 :: 		UART1_Write('1') ;
0x009E	0x3031      	MOVLW      49
0x009F	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00A0	0x2003      	CALL       _UART1_Write
;u2.c,72 :: 		}else{
0x00A1	0x28A5      	GOTO       L_check_key38
L_check_key37:
;u2.c,73 :: 		UART1_Write('0') ;
0x00A2	0x3030      	MOVLW      48
0x00A3	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00A4	0x2003      	CALL       _UART1_Write
;u2.c,74 :: 		}
L_check_key38:
;u2.c,75 :: 		}else if (i == 8){
0x00A5	0x28FF      	GOTO       L_check_key39
L_check_key36:
0x00A6	0x3000      	MOVLW      0
0x00A7	0x0621      	XORWF      _i+1, 0
0x00A8	0x1D03      	BTFSS      STATUS, 2
0x00A9	0x28AC      	GOTO       L__check_key70
0x00AA	0x3008      	MOVLW      8
0x00AB	0x0620      	XORWF      _i, 0
L__check_key70:
0x00AC	0x1D03      	BTFSS      STATUS, 2
0x00AD	0x28B8      	GOTO       L_check_key40
;u2.c,76 :: 		if(PORTD.F3 == 1){
0x00AE	0x1D88      	BTFSS      PORTD, 3
0x00AF	0x28B4      	GOTO       L_check_key41
;u2.c,77 :: 		UART1_Write('1') ;
0x00B0	0x3031      	MOVLW      49
0x00B1	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00B2	0x2003      	CALL       _UART1_Write
;u2.c,78 :: 		}else{
0x00B3	0x28B7      	GOTO       L_check_key42
L_check_key41:
;u2.c,79 :: 		UART1_Write('0') ;
0x00B4	0x3030      	MOVLW      48
0x00B5	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00B6	0x2003      	CALL       _UART1_Write
;u2.c,80 :: 		}
L_check_key42:
;u2.c,81 :: 		}else if (i == 9){
0x00B7	0x28FF      	GOTO       L_check_key43
L_check_key40:
0x00B8	0x3000      	MOVLW      0
0x00B9	0x0621      	XORWF      _i+1, 0
0x00BA	0x1D03      	BTFSS      STATUS, 2
0x00BB	0x28BE      	GOTO       L__check_key71
0x00BC	0x3009      	MOVLW      9
0x00BD	0x0620      	XORWF      _i, 0
L__check_key71:
0x00BE	0x1D03      	BTFSS      STATUS, 2
0x00BF	0x28CA      	GOTO       L_check_key44
;u2.c,82 :: 		if(PORTC.F4 == 1){
0x00C0	0x1E07      	BTFSS      PORTC, 4
0x00C1	0x28C6      	GOTO       L_check_key45
;u2.c,83 :: 		UART1_Write('1') ;
0x00C2	0x3031      	MOVLW      49
0x00C3	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00C4	0x2003      	CALL       _UART1_Write
;u2.c,84 :: 		}else{
0x00C5	0x28C9      	GOTO       L_check_key46
L_check_key45:
;u2.c,85 :: 		UART1_Write('0') ;
0x00C6	0x3030      	MOVLW      48
0x00C7	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00C8	0x2003      	CALL       _UART1_Write
;u2.c,86 :: 		}
L_check_key46:
;u2.c,87 :: 		}else if (i == 10){
0x00C9	0x28FF      	GOTO       L_check_key47
L_check_key44:
0x00CA	0x3000      	MOVLW      0
0x00CB	0x0621      	XORWF      _i+1, 0
0x00CC	0x1D03      	BTFSS      STATUS, 2
0x00CD	0x28D0      	GOTO       L__check_key72
0x00CE	0x300A      	MOVLW      10
0x00CF	0x0620      	XORWF      _i, 0
L__check_key72:
0x00D0	0x1D03      	BTFSS      STATUS, 2
0x00D1	0x28DC      	GOTO       L_check_key48
;u2.c,88 :: 		if(PORTC.F5 == 1){
0x00D2	0x1E87      	BTFSS      PORTC, 5
0x00D3	0x28D8      	GOTO       L_check_key49
;u2.c,89 :: 		UART1_Write('1') ;
0x00D4	0x3031      	MOVLW      49
0x00D5	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00D6	0x2003      	CALL       _UART1_Write
;u2.c,90 :: 		}else{
0x00D7	0x28DB      	GOTO       L_check_key50
L_check_key49:
;u2.c,91 :: 		UART1_Write('0') ;
0x00D8	0x3030      	MOVLW      48
0x00D9	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00DA	0x2003      	CALL       _UART1_Write
;u2.c,92 :: 		}
L_check_key50:
;u2.c,93 :: 		}else if (i == 11){
0x00DB	0x28FF      	GOTO       L_check_key51
L_check_key48:
0x00DC	0x3000      	MOVLW      0
0x00DD	0x0621      	XORWF      _i+1, 0
0x00DE	0x1D03      	BTFSS      STATUS, 2
0x00DF	0x28E2      	GOTO       L__check_key73
0x00E0	0x300B      	MOVLW      11
0x00E1	0x0620      	XORWF      _i, 0
L__check_key73:
0x00E2	0x1D03      	BTFSS      STATUS, 2
0x00E3	0x28EE      	GOTO       L_check_key52
;u2.c,94 :: 		if(PORTD.F4 == 1){
0x00E4	0x1E08      	BTFSS      PORTD, 4
0x00E5	0x28EA      	GOTO       L_check_key53
;u2.c,95 :: 		UART1_Write('1') ;
0x00E6	0x3031      	MOVLW      49
0x00E7	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00E8	0x2003      	CALL       _UART1_Write
;u2.c,96 :: 		}else{
0x00E9	0x28ED      	GOTO       L_check_key54
L_check_key53:
;u2.c,97 :: 		UART1_Write('0') ;
0x00EA	0x3030      	MOVLW      48
0x00EB	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00EC	0x2003      	CALL       _UART1_Write
;u2.c,98 :: 		}
L_check_key54:
;u2.c,99 :: 		}else if (i == 12){
0x00ED	0x28FF      	GOTO       L_check_key55
L_check_key52:
0x00EE	0x3000      	MOVLW      0
0x00EF	0x0621      	XORWF      _i+1, 0
0x00F0	0x1D03      	BTFSS      STATUS, 2
0x00F1	0x28F4      	GOTO       L__check_key74
0x00F2	0x300C      	MOVLW      12
0x00F3	0x0620      	XORWF      _i, 0
L__check_key74:
0x00F4	0x1D03      	BTFSS      STATUS, 2
0x00F5	0x28FF      	GOTO       L_check_key56
;u2.c,100 :: 		if(PORTD.F5 == 1){
0x00F6	0x1E88      	BTFSS      PORTD, 5
0x00F7	0x28FC      	GOTO       L_check_key57
;u2.c,101 :: 		UART1_Write('1') ;
0x00F8	0x3031      	MOVLW      49
0x00F9	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00FA	0x2003      	CALL       _UART1_Write
;u2.c,102 :: 		}else{
0x00FB	0x28FF      	GOTO       L_check_key58
L_check_key57:
;u2.c,103 :: 		UART1_Write('0') ;
0x00FC	0x3030      	MOVLW      48
0x00FD	0x00A4      	MOVWF      FARG_UART1_Write_data_
0x00FE	0x2003      	CALL       _UART1_Write
;u2.c,104 :: 		}
L_check_key58:
;u2.c,105 :: 		}
L_check_key56:
L_check_key55:
L_check_key51:
L_check_key47:
L_check_key43:
L_check_key39:
L_check_key35:
L_check_key31:
L_check_key27:
L_check_key23:
L_check_key19:
L_check_key15:
;u2.c,31 :: 		for(i = 1; i < 13; i++){
0x00FF	0x0AA0      	INCF       _i, 1
0x0100	0x1903      	BTFSC      STATUS, 2
0x0101	0x0AA1      	INCF       _i+1, 1
;u2.c,106 :: 		}
0x0102	0x281A      	GOTO       L_check_key7
L_check_key8:
;u2.c,109 :: 		}
L_end_check_key:
0x0103	0x0008      	RETURN
; end of _check_key
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0104	0x200D      	CALL       _____DoICP
0x0105	0x118A      	BCF        PCLATH, 3
0x0106	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0107	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0108	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0109	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x010A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x010B	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x010C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x010D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x010E	0x2904      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x010F	0x0008      	RETURN
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0110	0x1683      	BSF        STATUS, 5
0x0111	0x1303      	BCF        STATUS, 6
0x0112	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0113	0x3090      	MOVLW      144
0x0114	0x1283      	BCF        STATUS, 5
0x0115	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0116	0x1683      	BSF        STATUS, 5
0x0117	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0118	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0119	0x1283      	BCF        STATUS, 5
0x011A	0x1E8C      	BTFSS      PIR1, 5
0x011B	0x291F      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x011C	0x081A      	MOVF       RCREG, 0
0x011D	0x00F0      	MOVWF      R0
0x011E	0x2919      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x011F	0x0008      	RETURN
; end of _UART1_Init
_main:
0x0120	0x1283      	BCF        STATUS, 5
0x0121	0x1303      	BCF        STATUS, 6
0x0122	0x01A0      	CLRF       _i
0x0123	0x01A1      	CLRF       33
;u2.c,6 :: 		void main(){
;u2.c,8 :: 		ANSEL  = 0;
0x0124	0x1683      	BSF        STATUS, 5
0x0125	0x1703      	BSF        STATUS, 6
0x0126	0x0188      	CLRF       ANSEL
;u2.c,9 :: 		ANSELH = 0;
0x0127	0x0189      	CLRF       ANSELH
;u2.c,10 :: 		TRISA = 0b11111111;
0x0128	0x30FF      	MOVLW      255
0x0129	0x1303      	BCF        STATUS, 6
0x012A	0x0085      	MOVWF      TRISA
;u2.c,11 :: 		TRISB = 0b00111111;
0x012B	0x303F      	MOVLW      63
0x012C	0x0086      	MOVWF      TRISB
;u2.c,12 :: 		TRISC = 0b10111111;
0x012D	0x30BF      	MOVLW      191
0x012E	0x0087      	MOVWF      TRISC
;u2.c,13 :: 		TRISD = 0b01111111;
0x012F	0x307F      	MOVLW      127
0x0130	0x0088      	MOVWF      TRISD
;u2.c,14 :: 		UART1_Init(9600);
0x0131	0x3019      	MOVLW      25
0x0132	0x0099      	MOVWF      SPBRG
0x0133	0x1518      	BSF        TXSTA, 2
0x0134	0x2110      	CALL       _UART1_Init
;u2.c,16 :: 		while(1){
L_main0:
;u2.c,17 :: 		if(PORTA.F0 == 1 && PORTA.F1 == 1 && PORTA.F2 == 1 && PORTA.F3 == 1 && PORTA.F4 == 1 && PORTA.F5 == 1
0x0135	0x1C05      	BTFSS      PORTA, 0
0x0136	0x294F      	GOTO       L_main4
0x0137	0x1C85      	BTFSS      PORTA, 1
0x0138	0x294F      	GOTO       L_main4
0x0139	0x1D05      	BTFSS      PORTA, 2
0x013A	0x294F      	GOTO       L_main4
0x013B	0x1D85      	BTFSS      PORTA, 3
0x013C	0x294F      	GOTO       L_main4
0x013D	0x1E05      	BTFSS      PORTA, 4
0x013E	0x294F      	GOTO       L_main4
0x013F	0x1E85      	BTFSS      PORTA, 5
0x0140	0x294F      	GOTO       L_main4
;u2.c,18 :: 		&& PORTB.F0 == 1 && PORTB.F1 == 1 && PORTB.F2 == 1 && PORTB.F3 == 1 && PORTB.F4 == 1 && PORTB.F5 == 1){
0x0141	0x1C06      	BTFSS      PORTB, 0
0x0142	0x294F      	GOTO       L_main4
0x0143	0x1C86      	BTFSS      PORTB, 1
0x0144	0x294F      	GOTO       L_main4
0x0145	0x1D06      	BTFSS      PORTB, 2
0x0146	0x294F      	GOTO       L_main4
0x0147	0x1D86      	BTFSS      PORTB, 3
0x0148	0x294F      	GOTO       L_main4
0x0149	0x1E06      	BTFSS      PORTB, 4
0x014A	0x294F      	GOTO       L_main4
0x014B	0x1E86      	BTFSS      PORTB, 5
0x014C	0x294F      	GOTO       L_main4
L__main59:
;u2.c,19 :: 		PORTD.F7 = 1;
0x014D	0x1788      	BSF        PORTD, 7
;u2.c,20 :: 		}else{
0x014E	0x2950      	GOTO       L_main5
L_main4:
;u2.c,21 :: 		PORTD.F7 = 0;
0x014F	0x1388      	BCF        PORTD, 7
;u2.c,22 :: 		}
L_main5:
;u2.c,24 :: 		check_key();
0x0150	0x2014      	CALL       _check_key
;u2.c,25 :: 		delay_ms(500);
0x0151	0x3003      	MOVLW      3
0x0152	0x00FB      	MOVWF      R11
0x0153	0x308A      	MOVLW      138
0x0154	0x00FC      	MOVWF      R12
0x0155	0x3055      	MOVLW      85
0x0156	0x00FD      	MOVWF      R13
L_main6:
0x0157	0x0BFD      	DECFSZ     R13, 1
0x0158	0x2957      	GOTO       L_main6
0x0159	0x0BFC      	DECFSZ     R12, 1
0x015A	0x2957      	GOTO       L_main6
0x015B	0x0BFB      	DECFSZ     R11, 1
0x015C	0x2957      	GOTO       L_main6
0x015D	0x0000      	NOP
0x015E	0x0000      	NOP
;u2.c,27 :: 		}
0x015F	0x2935      	GOTO       L_main0
;u2.c,28 :: 		}
L_end_main:
0x0160	0x2960      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [10]    _UART1_Write
0x000D       [7]    _____DoICP
0x0014     [240]    _check_key
0x0104      [12]    ___CC2DW
0x0110      [16]    _UART1_Init
0x0120      [65]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [2]    _i
0x0022       [2]    ___DoICPAddr
0x0024       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0088       [1]    TRISD
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_check_key7
  L_check_key8
  L_check_key9
  L_check_key10
  L_check_key11
  L_check_key12
  L_check_key13
  L_check_key14
  L_check_key15
  L_check_key16
  L_check_key17
  L_check_key18
  L_check_key19
  L_check_key20
  L_check_key21
  L_check_key22
  L_check_key23
  L_check_key24
  L_check_key25
  L_check_key26
  L_check_key27
  L_check_key28
  L_check_key29
  L_check_key30
  L_check_key31
  L_check_key32
  L_check_key33
  L_check_key34
  L_check_key35
  L_check_key36
  L_check_key37
  L_check_key38
  L_check_key39
  L_check_key40
  L_check_key41
  L_check_key42
  L_check_key43
  L_check_key44
  L_check_key45
  L_check_key46
  L_check_key47
  L_check_key48
  L_check_key49
  L_check_key50
  L_check_key51
  L_check_key52
  L_check_key53
  L_check_key54
  L_check_key55
  L_check_key56
  L_check_key57
  L_check_key58
  L__main59
  L_end_main
  _main
  L_end_check_key
  _check_key
  L__check_key62
  L__check_key63
  L__check_key64
  L__check_key65
  L__check_key66
  L__check_key67
  L__check_key68
  L__check_key69
  L__check_key70
  L__check_key71
  L__check_key72
  L__check_key73
  L__check_key74
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
